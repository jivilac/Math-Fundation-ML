#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
HW 3
\end_layout

\begin_layout Author
Juan Vila
\end_layout

\begin_layout Section*
Part 1
\end_layout

\begin_layout Subsection*
A.
\end_layout

\begin_layout Standard
As 
\begin_inset Formula $r_{i}=y_{i}-Xw$
\end_inset

, also we know that for any 
\begin_inset Formula $\hat{w}$
\end_inset

 we can form the following equation 
\begin_inset Formula $y=X\hat{w}+\hat{r}$
\end_inset

, then we replace this equation into the first one and we get 
\begin_inset Formula $r=X\hat{w}+\hat{r}-Xw$
\end_inset

, now if we reoder the terms, we get; 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $r_{i}=\hat{r}-X(\hat{w}-w)$
\end_inset


\end_layout

\begin_layout Subsection*
B.
\end_layout

\begin_layout Standard
Now if we construct the norm -2 function we get:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left\Vert r\right\Vert ^{2}=(\hat{r}-X(\hat{w}-w))^{T}(\hat{r}-X(\hat{w}-w))
\]

\end_inset


\end_layout

\begin_layout Standard
Now if we multiply both expresion we get:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left\Vert r\right\Vert ^{2}=\hat{r}^{T}\hat{r}+\hat{r}^{T}X(\hat{w}-w)+(\hat{w}-w)^{T}X^{T}\hat{r}+(\hat{w}-w)^{T}X^{T}X(\hat{w}-w)
\]

\end_inset


\end_layout

\begin_layout Subsection*
C.
\end_layout

\begin_layout Standard
As we know that 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\hat{r}$
\end_inset

 is orthogonal to X, we know that the product of 
\begin_inset Formula $\hat{r}^{T}X=0$
\end_inset

, then if we replace:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left\Vert r\right\Vert ^{2}=\hat{r}^{T}\hat{r}+(\hat{w}-w)^{T}X^{T}X(\hat{w}-w)
\]

\end_inset


\end_layout

\begin_layout Subsection*
D.
 
\end_layout

\begin_layout Standard
As we know that 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $X^{T}X$
\end_inset

 is positive definite matrix, which implies that 
\begin_inset Formula $X^{T}X>0$
\end_inset

, and that 
\begin_inset Formula $\left\Vert \hat{r}\right\Vert ^{2}=$
\end_inset


\begin_inset Formula $\hat{r}^{T}\hat{r}$
\end_inset

.
 Then, the only way that 
\begin_inset Formula $\left\Vert \hat{r}\right\Vert ^{2}=\left\Vert r\right\Vert ^{2}$
\end_inset

 is that 
\begin_inset Formula $\hat{w}=w$
\end_inset

 and for any w different that 
\begin_inset Formula $\hat{w}$
\end_inset

, as in a cuadratic form implies that 
\begin_inset Formula $\left\Vert \hat{r}\right\Vert ^{2}<\left\Vert r\right\Vert ^{2}$
\end_inset

 
\end_layout

\begin_layout Section*
Part 2
\end_layout

\begin_layout Subsection*
A.
\end_layout

\begin_layout Standard
We select the first vector 
\begin_inset Formula $x_{1}=\left(\begin{array}{c}
3\\
0\\
0
\end{array}\right)$
\end_inset

 and 
\begin_inset Formula $\left\Vert x_{1}\right\Vert =\sqrt{3^{2}+0+0}=3$
\end_inset

, then 
\begin_inset Formula $u_{1}=\frac{x_{1}}{\left\Vert x_{1}\right\Vert }=\left(\begin{array}{c}
1\\
0\\
0
\end{array}\right)$
\end_inset

.
 Now have to obtain 
\begin_inset Formula $u_{2}$
\end_inset

, which could be defined as the residual between 
\begin_inset Formula $u_{1}$
\end_inset

 and 
\begin_inset Formula $x_{2}$
\end_inset

, then this is 
\begin_inset Formula $x_{2}^{'}=x_{2}-u_{1}(u_{1}^{T}x_{2})$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
x_{2}^{'}=x_{2}-u_{1}(u_{1}^{T}x_{2})
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
x_{2}^{'}=\left(\begin{array}{c}
1\\
3\\
4
\end{array}\right)-\left(\begin{array}{c}
1\\
0\\
0
\end{array}\right)(\left(\begin{array}{ccc}
1 & 0 & 0\end{array}\right)\left(\begin{array}{c}
1\\
3\\
4
\end{array}\right))
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
x_{2}^{'}=\left(\begin{array}{c}
1\\
3\\
4
\end{array}\right)-\left(\begin{array}{c}
1\\
0\\
0
\end{array}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
x_{2}^{'}=\left(\begin{array}{c}
0\\
3\\
4
\end{array}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Then the norm is 
\begin_inset Formula $\left\Vert x_{2}^{'}\right\Vert =\sqrt{0+9+16}=5$
\end_inset

, then 
\begin_inset Formula $u_{2}=\frac{x_{2}^{'}}{\left\Vert x_{2}^{'}\right\Vert }=\left(\begin{array}{c}
0\\
\frac{3}{5}\\
\frac{4}{5}
\end{array}\right)$
\end_inset

.
 Then 
\begin_inset Formula $U=\left\{ \left(\begin{array}{c}
1\\
0\\
0
\end{array}\right),\left(\begin{array}{c}
0\\
\frac{3}{5}\\
\frac{4}{5}
\end{array}\right)\right\} $
\end_inset


\end_layout

\begin_layout Subsection*
B.
\end_layout

\begin_layout Subsection*
\begin_inset Graphics
	filename /Users/juanvila1/Downloads/IMG_8517.jpg
	scale 50
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Subsection*
C.
\end_layout

\begin_layout Standard
Now if we do the projection we got:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\hat{y}=X\left(X^{T}X\right)^{-1}X^{T}y
\]

\end_inset


\end_layout

\begin_layout Standard
We use U insted of X and we know as U is a orthonormal matrix 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $U^{T}U=I$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\hat{y}=U\left(U^{T}U\right)^{-1}U^{T}y
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\hat{y}=UU^{T}y
\]

\end_inset

Now we replace for U and get:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\hat{y}=\left[\begin{array}{cc}
1 & 0\\
0 & \frac{3}{5}\\
0 & \frac{4}{5}
\end{array}\right]\left[\begin{array}{ccc}
1 & 0 & 0\\
0 & \frac{3}{5} & \frac{4}{5}
\end{array}\right]\left(\begin{array}{c}
1\\
3\\
1
\end{array}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\hat{y}=\left[\begin{array}{ccc}
1 & 0 & 0\\
0 & \frac{9}{25} & \frac{12}{25}\\
0 & \frac{12}{25} & \frac{16}{25}
\end{array}\right]\left(\begin{array}{c}
1\\
3\\
1
\end{array}\right)=\left(\begin{array}{c}
1\\
\frac{39}{25}\\
\frac{52}{25}
\end{array}\right)
\]

\end_inset


\end_layout

\begin_layout Section*
Part 3
\end_layout

\begin_layout Standard
In the final part.
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
import numpy as np
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout
def normalize(x): 
\end_layout

\begin_layout Plain Layout
rv = x/np.sqrt(np.dot(x.T,x)) 
\end_layout

\begin_layout Plain Layout
return rv
\end_layout

\begin_layout Plain Layout
def find_zero(x): 
\end_layout

\begin_layout Plain Layout
idx = np.argwhere(np.all(x[..., :] == 0, axis=0)) 
\end_layout

\begin_layout Plain Layout
rv = np.delete(x, idx, axis=1) 
\end_layout

\begin_layout Plain Layout
return rv
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout
def projection(U,X): 
\end_layout

\begin_layout Plain Layout
p1 = np.dot(U.T,X) 
\end_layout

\begin_layout Plain Layout
rv = np.dot(U,p1) return rv
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout
def gs_algorithm(A): 
\end_layout

\begin_layout Plain Layout
a_nonzero = find_zero(A) 
\end_layout

\begin_layout Plain Layout
U = normalize(a_nonzero[:,0]) 
\end_layout

\begin_layout Plain Layout
A_j=a_nonzero[:,1:] 
\end_layout

\begin_layout Plain Layout
n = np.shape(A_j)[1] 
\end_layout

\begin_layout Plain Layout
for i in range(n):
\end_layout

\begin_layout Plain Layout
x_j= A_j[:,i] 
\end_layout

\begin_layout Plain Layout
x_j_prime = x_j - projection(U,x_j) 
\end_layout

\begin_layout Plain Layout
if x_j_prime.sum() == 0: 
\end_layout

\begin_layout Plain Layout
continue 
\end_layout

\begin_layout Plain Layout
U = np.c_[ U, normalize(x_j_prime)] 
\end_layout

\begin_layout Plain Layout
return U
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Part 4
\end_layout

\begin_layout Standard
We know that U is nxn orthogonal matrix, 
\begin_inset Formula $\sum$
\end_inset

 is a nxp, which have to have rank of A, in this case implies that p=2.
 Then 
\begin_inset Formula $V^{T}$
\end_inset

should be also orthogonal of nxn.
 Also, we know that are the basis coeficient needed to represent each column
 of A.
 As the matrix A is only a diagonal matrix i will use an identity matrix
 as U, then as V is the matrix are coefficient to represent each column
 i will also use a identiy matrix because the value of A are positive.
 The the value matrix is the same as A:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
A=U\sum V^{T}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
A=\left[\begin{array}{cc}
1 & 0\\
0 & 1
\end{array}\right]\left[\begin{array}{cc}
2 & 0\\
0 & 1
\end{array}\right]\left[\begin{array}{cc}
1 & 0\\
0 & 1
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Section*
Part 5
\end_layout

\begin_layout Standard
We know that U is nxn orthogonal matrix, 
\begin_inset Formula $\sum$
\end_inset

 is a nxp, which have to have rank of A, in this case implies that p=2.
 Then 
\begin_inset Formula $V^{T}$
\end_inset

should be also orthogonal of nxn.
 Also, we know that are the basis coeficient needed to represent each column
 of A.
 As the matrix A is only a diagonal matrix i will use an identity matrix
 as U, then as V is the matrix are coefficient to represent each column
 i will also use a negative identiy matrix because the value of A are negative.
 The the value matrix is the same as A:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
A=U\sum V^{T}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
A=\left[\begin{array}{cc}
1 & 0\\
0 & 1
\end{array}\right]\left[\begin{array}{cc}
2 & 0\\
0 & 1
\end{array}\right]\left[\begin{array}{cc}
-1 & 0\\
0 & -1
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Section*
Part 6
\end_layout

\begin_layout Subsection*
A.
\end_layout

\begin_layout Standard
We can see, it's possible to decompose A into a SDV
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
A=U\sum V^{T}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
A=\left[\begin{array}{ccc}
| &  & |\\
U_{1} & \cdots & U_{n}\\
| &  & |
\end{array}\right]\left[\begin{array}{ccc}
\sigma_{1}\\
 & \ddots\\
 &  & \sigma_{d}
\end{array}\right]\left[\begin{array}{ccc}
- & V_{1} & -\\
 & \vdots\\
- & V_{d} & -
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Standard
We know that the product of 
\begin_inset Formula $U\sum$
\end_inset

 is :
\begin_inset Formula $\sum_{i=1}\left[\begin{array}{c}
|\\
U_{i}\\
|
\end{array}\right]\left[\begin{array}{cccc}
\sigma_{i} & 0 & ... & 0\end{array}\right]$
\end_inset

, where the dimensions are nx1 and 1xd(rank- 1).
 But as the elements of 
\begin_inset Formula $\sum$
\end_inset

 that are not in the diagonal provokes that much of the n by d matrix are
 zero.
 Then taking into consideration we can show that, 
\begin_inset Formula $U\sum$
\end_inset

 = 
\begin_inset Formula $\left[\begin{array}{ccc}
| &  & |\\
\sigma_{1}U_{1} & \cdots & \sigma_{n}U_{n}\\
| &  & |
\end{array}\right]$
\end_inset

, then if we use the outer product distribution again we transform the SVD
 decompomspotion in the following form:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
A=\sum_{i=1}^{min(n,d)}\sigma_{i}\left[\begin{array}{c}
|\\
U_{i}\\
|
\end{array}\right]\left[\begin{array}{ccc}
- & V_{i} & -\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Subsection*
B.
\end_layout

\begin_layout Standard
Using the same reasoning we can argue the same for a aproximation, as we
 know in a approximation of rank K we have only use K columns of U, a KxK
 matrix from 
\begin_inset Formula $\sum$
\end_inset

 and K rows of 
\begin_inset Formula $V^{T}$
\end_inset

of the SVD.
 Meaning the expresion is the same as in the previous question but the sumation
 for i until 
\begin_inset Formula $min(d,n)$
\end_inset

 is until K.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
A=\sum_{i=1}^{k}\sigma_{i}\left[\begin{array}{c}
|\\
U_{i}\\
|
\end{array}\right]\left[\begin{array}{ccc}
- & V_{i} & -\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Section*
Part 7
\end_layout

\begin_layout Subsection*
A.
\end_layout

\begin_layout Standard
I will run a one against all model, saying that as we have three lables,
 we are train a model for each label.
 After that as value of the projection is a real value we are going to say
 if that is over 0.5, we are going to predict the label in the test set.
 Then we are going to compare this results with the original data.
\end_layout

\end_body
\end_document
